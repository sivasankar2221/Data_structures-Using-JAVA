import static java.nio.file.Files.size;

public class Linkedlist1{
Node head;

   
 class Node{
   int data;
   Node next;
   Node(int val){
   data=val;
   next=null;
   }  
}

Linkedlist1(){
 head=null;
}
public void insertbegin(int val){
    Node n=new Node(val);
    //when list is empty
    if(head==null){
        head=n;
        
    }
    else{
       n.next=head;
       head=n;
    }    

}
public void last(int val){
  Node n=new Node(val);
   if(head!=null)
   {
       head=n;
   }
   else{
        Node temp,current;
      int size = 0;
        int count=(size%2==0)?(size/2):((size+1)/2);
        temp=head;
        current=null;
        for(int i=0;i<count;i++)
        {
        current=temp;
        temp=temp.next;
        }        
        current.next=n;
        n.next=temp;
           }
    int size = 0;
    size++;
   
}
public void display(){
   Node temp=head;
   while(temp !=null){
   
       System.out.print(temp.data+"");
       temp=temp.next;
   }
  
}
public static void main(String[]args){

   Linkedlist1 list=new Linkedlist1();
   list.insertbegin(9);
   list.insertbegin(5);
   list.insertbegin(7);
   list.insertbegin(0);
   list.display();
    int val=8;
   list.last(val);
   list.display();

}


}